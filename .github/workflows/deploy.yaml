name: Deploy RAG App to GCP VM

# Trigger the workflow on push events to the specified branch
on:
  push:
    branches:
      - main  # <<< IMPORTANT: Change this if your deployment branch is different (e.g., 'master')

jobs:
  deploy:
    name: Deploy Application to VM
    runs-on: ubuntu-latest # Use a standard GitHub Actions runner

    steps:
    # Step 1: Configure SSH Agent with Private Key
    # This uses the SSH_PRIVATE_KEY secret you added to GitHub earlier
    - name: Configure SSH
      uses: webfactory/ssh-agent@v0.9.0 # Action to load SSH keys
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }} # Use the secret

    # Step 2: Execute Deployment Commands on VM via SSH
    - name: Deploy to VM
      # Define environment variables for clarity (replace placeholders!)
      env:
        SSH_USER: mailto_danielprince         # <<< REPLACE with your actual username on the VM (e.g., mailto_danielprince)
        SSH_HOST: 34.100.227.2  # <<< REPLACE with your VM's actual External IP address
        APP_DIR: /home/mailto_danielprince/app # <<< REPLACE 'your_vm_user' here too
        GIT_BRANCH: main                # <<< Ensure this matches the branch in 'on:' above
        SERVICE_NAME: rag-app.service   # The name of your systemd service

      run: |
        echo "Connecting to ${SSH_USER}@${SSH_HOST}..."

        # SSH Options:
        # -o StrictHostKeyChecking=accept-new : Automatically add new host keys (trust on first use within workflow)
        # Consider using known_hosts for better security if feasible
        ssh_opts="-o StrictHostKeyChecking=accept-new"

        # Commands to run on the remote server
        # IMPORTANT: The 'sudo systemctl restart' requires passwordless sudo configuration on the VM (see next step)
        deploy_commands="cd ${APP_DIR} && \
                         echo 'Pulling latest code from branch ${GIT_BRANCH}...' && \
                         git checkout ${GIT_BRANCH} && \
                         git pull origin ${GIT_BRANCH} && \
                         echo 'Activating virtual environment...' && \
                         source venv/bin/activate && \
                         echo 'Installing/updating dependencies...' && \
                         pip install -r requirements.txt && \
                         echo 'Deactivating virtual environment (post-install)...' && \
                         deactivate && \
                        

        # Execute the commands via SSH
        ssh $ssh_opts ${SSH_USER}@${SSH_HOST} "${deploy_commands}"

        echo "Deployment commands executed on VM."